diff --git i/config.def.h w/config.def.h
index 19a0c61..0267c5e 100644
--- i/config.def.h
+++ w/config.def.h
@@ -1,5 +1,7 @@
 /* See LICENSE file for copyright and license details. */
 
+#include <X11/XF86keysym.h>
+
 /* appearance */
 static const unsigned int borderpx  = 1;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
@@ -58,14 +60,33 @@ static const Layout layouts[] = {
 #define SHCMD(cmd) { .v = (const char*[]){ "/bin/sh", "-c", cmd, NULL } }
 
 /* commands */
-static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
-static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
-static const char *termcmd[]  = { "st", NULL };
+static char dmenumon[2] = "0"; /* component of dmenu_cmd, manipulated in spawn() */
+static const char *dmenucmd[]     = { "dmenu_run", "-m",         dmenumon,         NULL };
+static const char *termcmd[]      = { "st",        NULL };
+static const char *browser_cmd[]   = { "librewolf", NULL };
+static const char *files_cmd[]     = { "true",      NULL }; /* WIP */
+static const char *mail_cmd[]      = { "st",        "-e",         "neomutt",        NULL };
+static const char *music_cmd[]     = { "st",        "-e",         "rmpc",           NULL };
+static const char *mixer_cmd[]     = { "st",        "-e",         "pulsemixer",     NULL };
+static const char *wlan_scan_cmd[] = { "iwctl",     "wlp170s0",   "scan",           NULL };
+
+static const char *vol_up[]        = { "wpctl",     "set-volume", "@DEFAULT_SINK@", "5%+",    NULL };
+static const char *vol_down[]      = { "wpctl",     "set-volume", "@DEFAULT_SINK@", "5%-",    NULL };
+static const char *vol_mute[]      = { "wpctl",     "set-mute",   "@DEFAULT_SINK@", "toggle", NULL };
 
 static const Key keys[] = {
 	/* modifier                     key        function        argument */
 	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
-	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
+	{ MODKEY,                       XK_q,      spawn,          {.v = music_cmd } },
+	{ MODKEY|ShiftMask,             XK_q,      spawn,          {.v = mixer_cmd } },
+	{ MODKEY,                       XK_s,      spawn,          {.v = termcmd } },
+	{ MODKEY,                       XK_w,      spawn,          {.v = browser_cmd } },
+	{ MODKEY|ShiftMask,             XK_w,      spawn,          {.v = wlan_scan_cmd } },
+	{ MODKEY,                       XK_e,      spawn,          {.v = files_cmd } },
+	{ MODKEY,                       XK_r,      spawn,          {.v = mail_cmd } },
+	{ 0,         XF86XK_AudioRaiseVolume,      spawn,          { .v = vol_up } },
+	{ 0,         XF86XK_AudioLowerVolume,      spawn,          { .v = vol_down } },
+	{ 0,                XF86XK_AudioMute,      spawn,          { .v = vol_mute } },
 	{ MODKEY,                       XK_b,      togglebar,      {0} },
 	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
 	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
